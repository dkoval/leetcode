package com.github.dkoval.leetcode.challenge;

/**
 * <a href="https://leetcode.com/explore/challenge/card/march-leetcoding-challenge-2021/589/week-2-march-8th-march-14th/3665/">Remove Palindromic Subsequences</a>
 * <p>
 * Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence
 * from s.
 * <p>
 * Return the minimum number of steps to make the given string empty.
 * <p>
 * A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without
 * changing its order.
 * <p>
 * A string is called palindrome if is one that reads the same backward as well as forward.
 */
public class RemovePalindromicSubsequences {

    public int removePalindromeSub(String s) {
        if (s.isEmpty()) {
            return 0;
        }
        if (isPalindrome(s)) {
            return 1;
        }
        return 2;
    }

    private boolean isPalindrome(String s) {
        int i = 0, j = s.length() - 1;
        while (i < j) {
            if (s.charAt(i) != s.charAt(j)) {
                return false;
            }
            i++;
            j--;
        }
        return true;
    }
}
