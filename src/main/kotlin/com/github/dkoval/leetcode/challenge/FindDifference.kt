package com.github.dkoval.leetcode.challenge

/**
 * [Find the Difference](https://leetcode.com/explore/challenge/card/september-leetcoding-challenge/557/week-4-september-22nd-september-28th/3471/)
 *
 * Given two strings s and t which consist of only lowercase letters.
 *
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 *
 * Find the letter that was added in t.
 */
interface FindDifference {

    fun findTheDifference(s: String, t: String): Char
}

// Time complexity: O(N), space complexity: O(1)
object FindDifferenceUsingSumKt : FindDifference {

    override fun findTheDifference(s: String, t: String): Char {
        var addedCharAsciiValue = 0
        for (i in s.indices) {
            addedCharAsciiValue += t[i].toInt()
            addedCharAsciiValue -= s[i].toInt()
        }
        addedCharAsciiValue += t.last().toInt()
        return addedCharAsciiValue.toChar()
    }
}

// Time complexity: O(N), space complexity: O(1)
object FindDifferenceUsingXorKt : FindDifference {

    // Resource: https://www.youtube.com/watch?v=sRwElQ_TOr8&t=266s
    override fun findTheDifference(s: String, t: String): Char {
        var addedChar = 0
        for (cs in s) addedChar = addedChar xor cs.toInt()
        for (ct in t) addedChar = addedChar xor ct.toInt()
        return addedChar.toChar()
    }
}